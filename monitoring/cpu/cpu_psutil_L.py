import psutil
import time

def get_cpu_stats():
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞—Ö
    cpu_count = psutil.cpu_count(logical=True)
    cpu_stats = []

    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –¥–ª—è –≤—Å–µ—Ö –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤
    loads = psutil.cpu_percent(interval=0.1, percpu=True)
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –¥–ª—è –≤—Å–µ—Ö –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤
    times = psutil.cpu_times(percpu=True)

    for i in range(cpu_count):
        print(times[i])
        user_time = times[i].user
        system_time = times[i].system
        idle_time = times[i].idle
        irq_time = times[i].irq  # –í—Ä–µ–º—è –Ω–∞ –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        softirq_time = times[i].softirq  # –í—Ä–µ–º—è –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (DPC)
        iowait_time = times[i].iowait  # –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
        total_time = user_time + system_time + idle_time + irq_time + softirq_time + iowait_time
        cpu_stats.append({
            'logical_processor': i,
            'load_percent': loads[i],
            'user_time_percent': (user_time / total_time) * 100,
            'system_time_percent': (system_time / total_time) * 100,
            'irq_time_percent': (irq_time / total_time) * 100,
            'softirq_time_percent': (softirq_time / total_time) * 100,
            'iowait_time_percent': (iowait_time / total_time) * 100,
            'idle_time_percent': (idle_time / total_time) * 100,
        })

    return cpu_stats


if __name__ == "__main__":
    start_time = time.time()  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
    cpu_stats = get_cpu_stats()
    end_time = time.time()  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è

    elapsed_time = end_time - start_time  # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
    with open("cpu_psutil.txt", "w") as f:
        for stat in cpu_stats:
            f.write(f"–õ–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä {stat['logical_processor']}:\n")
            f.write(f"  üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: {stat['load_percent']}%\n")
            f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º —Ä–µ–∂–∏–º–µ: {stat['user_time_percent']:.2f}%\n")
            f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ: {stat['system_time_percent']:.2f}%\n")
            f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è: {stat['irq_time_percent']:.2f}%\n")
            f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (DPC): {stat['softirq_time_percent']:.2f}%\n")
            f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞: {stat['iowait_time_percent']:.2f}%\n")
            f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Å—Ç–æ—è: {stat['idle_time_percent']:.2f}%\n")
            f.write("\n")

        f.write(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed_time:.4f} —Å–µ–∫—É–Ω–¥\n")
