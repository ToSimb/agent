import time
import wmi

def safe_getattr(obj, attr, default=-1):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ –æ–±—ä–µ–∫—Ç–∞. –ï—Å–ª–∏ –∞—Ç—Ä–∏–±—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç default."""
    try:
        return getattr(obj, attr, default)
    except Exception:
        return default

def get_cpu_info():
    time_start = time.time()
    c = wmi.WMI()
    time_get_c = time.time()

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏
    with open("cpu1.txt", "w", encoding="utf-8") as f:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–∂–¥–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—É
        cpus = c.Win32_Processor()
        time_get_cpus = time.time()
        f.write(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(cpus)}\n" + "-" * 50 + "\n")

        for cpu in cpus:
            cpu_id = safe_getattr(cpu, "DeviceID")
            f.write(f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {cpu_id}\n")
            f.write(f"–ò–º—è: {safe_getattr(cpu, 'Name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ').strip()}\n")
            f.write(f"–§–∏–∑–∏—á–µ—Å–∫–∏—Ö —è–¥–µ—Ä: {safe_getattr(cpu, 'NumberOfCores')}\n")
            f.write(f"–õ–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤: {safe_getattr(cpu, 'NumberOfLogicalProcessors')}\n")
            f.write(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞: {safe_getattr(cpu, 'MaxClockSpeed')} MHz\n")
            f.write(f"–¢–µ–∫—É—â–∞—è —á–∞—Å—Ç–æ—Ç–∞: {safe_getattr(cpu, 'CurrentClockSpeed')} MHz\n")
            f.write(f"–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: {safe_getattr(cpu, 'LoadPercentage')}%\n")
            f.write("-" * 50 + "\n")
        time_pars_cpus = time.time()

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –ø–æ –∫–∞–∂–¥–æ–º—É –ª–æ–≥–∏—á–µ—Å–∫–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—É
        perf_counters = c.Win32_PerfFormattedData_PerfOS_Processor()
        time_get_perf = time.time()
        for perf in perf_counters:
            if perf.Name.isdigit():  # –ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "0", "1" –∏ —Ç. –¥. (–Ω–æ–º–µ—Ä –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞)
                f.write(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ {perf.Name}\n")
                f.write(f"  üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: {safe_getattr(perf, 'PercentProcessorTime')}%\n")
                f.write(f"  üîπ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É: {safe_getattr(perf, 'InterruptsPerSec')}\n")
                f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º —Ä–µ–∂–∏–º–µ: {safe_getattr(perf, 'PercentUserTime')}%\n")
                f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ: {safe_getattr(perf, 'PercentPrivilegedTime')}%\n")
                f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è: {safe_getattr(perf, 'PercentInterruptTime')}%\n")
                f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (DPC): {safe_getattr(perf, 'PercentDPCTime')}%\n")
                f.write(f"  üîπ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Å—Ç–æ—è: {safe_getattr(perf, 'PercentIdleTime')}%\n")
                f.write("-" * 50 + "\n")
        time_pars_perf = time.time()


        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        f.write(f"–≤—Ä–µ–º—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞                       {time_get_c - time_start}\n")
        f.write(f"–≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞–º     {time_get_cpus - time_get_c}\n")
        f.write(f"–≤—Ä–µ–º—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞–º      {time_pars_cpus - time_get_cpus}\n")
        f.write(f"–≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–æ—Ç–æ–∫–∞–º         {time_get_perf - time_pars_cpus}\n")
        f.write(f"–≤—Ä–µ–º—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–æ—Ç–æ–∫–∞–º          {time_pars_perf - time_get_perf}\n")

# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏
get_cpu_info()
